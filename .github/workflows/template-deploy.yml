name: "deploy template"
on:
  workflow_call:
    inputs:
      project-location:
        required: true
        type: string
        description: "Path to project files"
      project-name:
        required: true
        type: string
        description: "name of the project"
    secrets:
      docker-username:
        required: true
      docker-token:
        required: true
      digitalocean-access-token:
        required: true
      digitalocean-cluster-name:
        required: true

jobs:
  build-push-docker:
    runs-on: ubuntu-20.04
    steps:
      - name: "checkout project code"
        uses: actions/checkout@v2

      - name: "Setup Docker"
        uses: docker/setup-buildx-action@v1

      - name: "Login to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.docker-username }}
          password: ${{ secrets.docker-token }}

      - name: "build and push Docker image"
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.project-location }}
          file: Dockerfile
          push: true
          tags: ${{ secrets.docker-username }}/${{ inputs.project-name }}:${ GITHUB_REF_NAME }
  deploy-kubernetes:
    runs-on: ubuntu-20.04
    needs: build-push-docker
    steps:
    - name: Change the image value of the manifest file to the new version
      uses: mikefarah/yq@master
      with:
        cmd: yq -i '.spec.template.spec.containers[0].image= "${{ secrets.docker-username }}/${{ inputs.project-name }}:${ GITHUB_REF_NAME }"' 'deploy/projects/${{ inputs.project-name }}-deployment.yml'

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.digitalocean-access-token }}
    
    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.digitalocean-cluster-name }}
    
    - name: Update deployment on DigitalOcean's Kubernetes cluster
      run: kubectl apply -f deploy/projects/${{ inputs.project-name }}-deployment.yml
    
    - name: Verify new deployment
      run: kubectl rollout status deployment/${{ inputs.project-name }}-deployment

    - name: Update service on DigitalOcean's Kubernetes cluster
      run: kubectl apply -f deploy/projects/${{ inputs.project-name }}-service.yml
    
    - name: Verify new service
      run: kubectl get service ${{ inputs.project-name }}-service --sort-by=.metadata.name