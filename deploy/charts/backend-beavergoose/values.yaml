metrics-server:
  apiService:
    insecureSkipTLSVerify: true

  args:
    - --kubelet-insecure-tls

  metrics:
    enabled: true

seq:
  acceptEULA: "Y"
  firstRunRequireAuthenticationForHttpIngestion: true

  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx

  ui:
    service:
      port: 80
    ingress:
      enabled: true
      path: /seq

  resources:
    limits:
      memory: "1Gi"

  persistence:
    enabled: true
    path: /mnt/data/seqdata
    existingClaim: seqdata
    storageClass: "manual"
    accessMode: ReadWriteMany
    size: 2Gi

rabbitmq:
  fullnameOverride: "rabbitmq"

  auth:
    existingPasswordSecret: "rabbitmq-credentials"



account-microservice:
  name: account-microservice
  
  deploy:
    image: mrtech12/beavergoose-accountmicroservice
    tag: release-2.1.0
    containerPort: 8000 

    initContainer:
      tag: 1.3 

    envConfigMap:
      - JWT_Issuer
      - Seq_ServerUrl
    
    configMaps:
      jwt-config: issuer
      seq-config: hostname
    
    envSecret:
      - AccountContext
      - JWT_Secret
      - Seq_ApiKey

    secrets:
      account-microservice-dbconnectionstring: accountcontext
      jwt-config: secret
      seq-apikeys: accountmicroservice
    

  dbmigration-job:
    name: dbmigration
    image: mrtech12/beavergoose-accountmicroservice-dbmigration
    tag: release-1.0.0
    args: AccountMicroservice.DBMigration

    envSecret:
      - AccountContext

    secrets:
      account-microservice-dbconnectionstring: accountcontext

  hpa:
    targetCPUUtilization: 55

  rb:
    name: account-microservice-dbmigration-reader

  role:
    name: account-microservice-read-jobs

  sa:
    name: account-microservice-dbmigration
  
  postgesql:
    global:
      postgresql:
      auth:
        database: "beavergoose"
      service:
        ports:
          postgresql: 5432

    fullnameOverride: "account-microservice-postgresql" # hostname for connectionstring 

    auth:
      username: "testbox"
      existingSecret: "account-microservice-postgresql-credentials"
      secretKeys:
        adminPasswordKey: postgres-password
        userPasswordKey: password

    primary:
      persistence:
        enabled: true
        existingClaim: "account-microservice-postgresql"

    volumePermissions:
      enabled: true


api-gateway:
  name: api-gateway
  
  deploy:
    image: mrtech12/beavergoose-api-gateway
    tag: release-2.1.0
    containerPort: 5001

    envConfigMap:
      - JWT_Issuer
    
    configMaps:
      jwt-config: issuer
    
    envSecret:
      - JWT_Secret

    secrets:
      jwt-config: secret

  hpa:
    targetCPUUtilization: 55


file-microservice:
  name: file-microservice
    
  deploy:
    image: mrtech12/beavergoose-filemicroservice
    tag: release-2.1.0
    containerPort: 6000

    envConfigMap:
      - JWT_Issuer
      - Seq_ServerUrl
      - RabbitMQ_HostName
      - RabbitMQ_Port
      - DeleteFile_Endpoint
    
    configMaps:
      jwt-config: issuer
      seq-config: hostname
      rabbitmq-config: hostname
      rabbitmq-config: port
      deletefile: hostname
    
    envSecret:
      - JWT_Secret
      - Seq_ApiKey

    secrets:
      jwt-config: secret
      seq-apikeys: filemicroservice
    
  hpa:
    targetCPUUtilization: 55


link-microservice:
  name: link-microservice
  
  deploy:
    image: mrtech12/beavergoose-linkmicroservice
    tag: release-2.1.0
    containerPort: 7000

    initContainer:
      tag: 1.3 

    envConfigMap:
      - JWT_Issuer
      - Seq_ServerUrl
      - RabbitMQ_HostName
      - RabbitMQ_Port
    
    configMaps:
      jwt-config: issuer
      seq-config: hostname
      rabbitmq-config: hostname
      rabbitmq-config: port
    
    envSecret:
      - LinkContext
      - JWT_Secret
      - Seq_ApiKey

    secrets:
      link-microservice-dbconnectionstring: linkcontext
      jwt-config: secret
      seq-apikeys: linkmicroservice
    

  dbmigration-job:
    name: dbmigration
    image: mrtech12/beavergoose-linkmicroservice-dbmigration
    tag: release-1.0.0
    args: LinkMicroservice.DBMigration

    envSecret:
      - LinkContext

    secrets:
      link-microservice-dbconnectionstring: linkcontext

  hpa:
    targetCPUUtilization: 55

  rb:
    name: link-microservice-dbmigration-reader

  role:
    name: link-microservice-read-jobs

  sa:
    name: link-microservice-dbmigration

  postgesql:
    global:
      postgresql:
      auth:
        database: "beavergoose"
      service:
        ports:
          postgresql: 5432

    fullnameOverride: "link-microservice-postgresql" # hostname for connectionstring

    auth:
      username: "testbox"
      existingSecret: "link-microservice-postgresql-credentials"
      secretKeys:
        adminPasswordKey: postgres-password
        userPasswordKey: password

    primary:
      persistence:
        enabled: true
        existingClaim: "link-microservice-postgresql"

    volumePermissions:
      enabled: true
