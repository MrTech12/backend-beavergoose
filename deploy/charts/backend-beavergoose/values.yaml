global:


account-microservice:
  name: account-microservice
  
  deploy:
    image: mrtech12/beavergoose-accountmicroservice
    tag: release-1.0.0
    containerPort: 8000 

    envConfigMap:
      - JWT_Issuer
      - Seq_ServerUrl
    
    configMaps:
      jwt-config: issuer
      seq-config: hostname
    
    envSecret:
      - AccountContext
      - JWT_Secret
      - Seq_ApiKey

    secrets:
      account-microservice-dbconnectionstring: accountcontext
      jwt-config: secret
      seq-apikeys: accountmicroservice
    

  dbmigration-job:
    name: dbmigration
    image: mrtech12/beavergoose-accountmicroservice-dbmigration
    tag: release-1.0.0
    args: AccountMicroservice.DBMigration

    envSecret:
      - AccountContext

    secrets:
      account-microservice-dbconnectionstring: accountcontext

  hpa:
    targetCPUUtilization: 55

  rb:
    name: account-microservice-dbmigration-reader

  role:
    name: account-microservice-read-jobs

  sa:
    name: account-microservice-dbmigration
  
  postgesql:
    global:
      postgresql:
      ## @param global.postgresql.auth.database Name for a custom database to create.
      ## @param global.postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials.
      ## @param global.postgresql.auth.secretKeys.adminPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `global.postgresql.auth.existingSecret` is set.
      ## @param global.postgresql.auth.secretKeys.userPasswordKey Name of key in existing secret to use for PostgreSQL credentials. Only used when `global.postgresql.auth.existingSecret` is set.
      auth:
        database: "beavergoose"
        existingSecret: "account-microservice-postgresql-credentials"
        secretKeys:
          adminPasswordKey: "username"
          userPasswordKey: "password"

    ## @section PostgreSQL Primary parameters
    primary:
      ## PostgreSQL Primary persistence configuration
      persistence:
        ## @param primary.persistence.enabled Enable PostgreSQL Primary data persistence using PVC
        enabled: true
        ## @param primary.persistence.existingClaim Name of an existing PVC to use
        existingClaim: "account-microservice-postgresql"

    ## volumePermissions: Change the owner and group of the persistent volume(s) mountpoint(s) to 'runAsUser:fsGroup' on each node
    volumePermissions:
      ## @param volumePermissions.enabled Enable init container that changes the owner and group of the persistent volume
      enabled: true


api-gateway:


file-microservice:


link-microservice:

## TODO: add 2x PostgreSQL DB, 1x RabbitMQ, 1x Seq
## TOD: add 1x Metrics Server, 1x Kubernetes dashboard.