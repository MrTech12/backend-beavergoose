global:

metrics-server:
  apiService:
    insecureSkipTLSVerify: true

  args:
    - --kubelet-insecure-tls

  metrics:
    enabled: true

seq:
  acceptEULA: "Y"
  firstRunRequireAuthenticationForHttpIngestion: true

  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx

  ui:
    service:
      port: 80
    ingress:
      enabled: true
      path: /seq

  resources:
    limits:
      memory: "1Gi"

  persistence:
    enabled: true
    path: /mnt/data/seqdata
    existingClaim: seqdata
    storageClass: "manual"
    accessMode: ReadWriteMany
    size: 2Gi


account-microservice:
  name: account-microservice
  
  deploy:
    image: mrtech12/beavergoose-accountmicroservice
    tag: release-1.0.0
    containerPort: 8000 

    envConfigMap:
      - JWT_Issuer
      - Seq_ServerUrl
    
    configMaps:
      jwt-config: issuer
      seq-config: hostname
    
    envSecret:
      - AccountContext
      - JWT_Secret
      - Seq_ApiKey

    secrets:
      account-microservice-dbconnectionstring: accountcontext
      jwt-config: secret
      seq-apikeys: accountmicroservice
    

  dbmigration-job:
    name: dbmigration
    image: mrtech12/beavergoose-accountmicroservice-dbmigration
    tag: release-1.0.0
    args: AccountMicroservice.DBMigration

    envSecret:
      - AccountContext

    secrets:
      account-microservice-dbconnectionstring: accountcontext

  hpa:
    targetCPUUtilization: 55

  rb:
    name: account-microservice-dbmigration-reader

  role:
    name: account-microservice-read-jobs

  sa:
    name: account-microservice-dbmigration
  
  postgesql:
    global:
      postgresql:
      auth:
        database: "beavergoose"
        existingSecret: "account-microservice-postgresql-credentials"
        secretKeys:
          adminPasswordKey: "username"
          userPasswordKey: "password"

    primary:
      persistence:
        enabled: true
        existingClaim: "account-microservice-postgresql"

    volumePermissions:
      enabled: true


api-gateway:


file-microservice:


link-microservice:

  postgesql:
    global:
      postgresql:
      auth:
        database: "beavergoose"
        existingSecret: "link-microservice-postgresql-credentials"
        secretKeys:
          adminPasswordKey: "username"
          userPasswordKey: "password"

    primary:
      persistence:
        enabled: true
        existingClaim: "link-microservice-postgresql"

    volumePermissions:
      enabled: true

## TODO: add 2x PostgreSQL DB, 1x RabbitMQ, 1x Seq
## TOD: add 1x Metrics Server, 1x Kubernetes dashboard.